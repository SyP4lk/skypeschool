'use client';

import { useEffect, useMemo, useRef, useState } from 'react';
import { useRouter, usePathname } from 'next/navigation';
import TrialRequestModal from '../../components/TrialRequestModal';

const API = (process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api').replace(/\/+$/, '');
const ORIGIN = API.replace(/\/api$/, '');
const toAbs = (p?: string | null) => !p ? null : p.startsWith('http') ? p : `${ORIGIN}${p.startsWith('/') ? '' : '/'}${p}`;

export type TeacherSubject = { id?: string; subjectId?: string; name: string; price?: number | null; duration?: number | null };
export type TeacherProfileDTO = {
  id: string;
  photo?: string | null;
  aboutShort?: string | null;
  user?: { firstName?: string | null; lastName?: string | null; login?: string | null } | null;
  teacherSubjects?: TeacherSubject[] | null;
};
type Category = { id: string; name: string };
type Subject   = { id: string; name: string; categoryId?: string | null; minPrice?: number | null; minDuration?: number | null };

type Init = { categoryId: string; subjectId: string; sort: string; price: string };

const PRICE_OPTIONS = [
  { v: '', label: '–°—Ç–æ–∏–º–æ—Å—Ç—å: –Ω–µ –≤—ã–±—Ä–∞–Ω–æ' },
  { v: 'lt500', label: '–¥–æ 500 ‚ÇΩ' },
  { v: 'lt1000', label: '–¥–æ 1000 ‚ÇΩ' },
  { v: 'lt1500', label: '–¥–æ 1500 ‚ÇΩ' },
  { v: 'lt2000', label: '–¥–æ 2000 ‚ÇΩ' },
  { v: 'gte2000', label: '–æ—Ç 2000 ‚ÇΩ' },
];

export default function TeachersClient({
  data, categories, subjects, initialFilters,
}: {
  data: TeacherProfileDTO[];
  categories: Category[];
  subjects: Subject[];
  initialFilters: Init;
}) {
  const router = useRouter();
  const pathname = usePathname();

  const [categoryId, setCategory] = useState(initialFilters.categoryId);
  const [subjectId, setSubject]   = useState(initialFilters.subjectId);
  const [sort, setSort]           = useState(initialFilters.sort);
  const [price, setPrice]         = useState(initialFilters.price);
  const [trialOpen, setTrialOpen] = useState(false);

  // ----- –ø—Ä–µ–¥–º–µ—Ç—ã –∑–∞–≤–∏—Å—è—Ç –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ -----
  const filteredSubjects: Subject[] = useMemo(() => {
    const hasCat = subjects.some(s => s.categoryId);
    if (!categoryId || !hasCat) return subjects;
    return subjects.filter(s => s.categoryId === categoryId);
  }, [subjects, categoryId]);

  // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º subject –µ—Å–ª–∏ –æ–Ω –Ω–µ –∏–∑ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  useEffect(() => {
    if (subjectId && !filteredSubjects.find(s => s.id === subjectId)) setSubject('');
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [categoryId, filteredSubjects.length]);

  // –∫–∞—Ä—Ç–∞ subjectId -> categoryId (–¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Å–ø–∏—Å–∫–∞)
  const subjectToCategory = useMemo(() => {
    const m = new Map<string, string | null>();
    for (const s of subjects) m.set(s.id, s.categoryId || null);
    return m;
  }, [subjects]);

  // ----- –∞–≤—Ç–æ–ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ -----
  const lastSearchRef = useRef<string>('');
  useEffect(() => {
    const qs = new URLSearchParams();
    if (categoryId) qs.set('categoryId', categoryId);
    if (subjectId)  qs.set('subjectId', subjectId);
    if (sort)       qs.set('sort', sort);
    if (price)      qs.set('price', price);

    const next = qs.toString();
    const current = typeof window !== 'undefined' ? window.location.search.replace(/^\?/, '') : '';

    if (next === current || next === lastSearchRef.current) return;
    lastSearchRef.current = next;

    router.replace(`${pathname}${next ? `?${next}` : ''}`, { scroll: false });
    router.refresh(); // –¥–µ—Ä–≥–∞–µ–º —Å–µ—Ä–≤–µ—Ä–Ω—É—é —á–∞—Å—Ç—å –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [categoryId, subjectId, sort, price]);

  // ----- –∫–ª–∏–µ–Ω—Ç—Å–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è (–ø–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞, –µ—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª "–≤—Å–µ—Ö") -----
  const baseFiltered = useMemo(() => {
    return data.filter(t => {
      const subjIds = (t.teacherSubjects || []).map(s => s.subjectId).filter(Boolean) as string[];
      if (subjectId) return subjIds.includes(subjectId);
      if (categoryId) return subjIds.some(id => subjectToCategory.get(id) === categoryId);
      return true;
    });
  }, [data, subjectId, categoryId, subjectToCategory]);

  // ----- —Ñ–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ (–∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π) -----
  const view = useMemo(() => {
    const minPrice = (t: TeacherProfileDTO) => {
      const vals = (t.teacherSubjects || []).map(s => (typeof s.price === 'number' ? s.price! : Infinity));
      const v = Math.min(...(vals.length ? vals : [Infinity]));
      return Number.isFinite(v) ? v : null;
    };
    if (!price) return baseFiltered;
    return baseFiltered.filter(t => {
      const p = minPrice(t);
      if (p == null) return false;
      if (price === 'lt500') return p < 500;
      if (price === 'lt1000') return p < 1000;
      if (price === 'lt1500') return p < 1500;
      if (price === 'lt2000') return p < 2000;
      if (price === 'gte2000') return p >= 2000;
      return true;
    });
  }, [baseFiltered, price]);

  return (
    <main className="max-w-6xl mx-auto px-4 py-6">
      <h1 className="text-xl font-semibold mb-3">–ù–∞–π—Ç–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</h1>

      {/* —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="flex flex-wrap gap-3 items-center rounded-lg border bg-white p-3">
        <select value={categoryId} onChange={(e) => setCategory(e.target.value)} className="h-10 rounded border px-3">
          <option value="">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
          {categories.map(c => <option key={c.id} value={c.id}>{c.name}</option>)}
        </select>

        <select value={subjectId} onChange={(e) => setSubject(e.target.value)} className="h-10 rounded border px-3">
          <option value="">–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã</option>
          {filteredSubjects.map(s => <option key={s.id} value={s.id}>{s.name}</option>)}
        </select>

        <select value={sort} onChange={(e) => setSort(e.target.value)} className="h-10 rounded border px-3">
          <option value="">–ë–µ–∑ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏</option>
          <option value="priceAsc">–°–Ω–∞—á–∞–ª–∞ –¥–µ—à–µ–≤–ª–µ</option>
          <option value="priceDesc">–°–Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–∂–µ</option>
        </select>

        <select value={price} onChange={(e) => setPrice(e.target.value)} className="h-10 rounded border px-3">
          {PRICE_OPTIONS.map(o => <option key={o.v} value={o.v}>{o.label}</option>)}
        </select>
      </div>

      {/* —Å–ø–∏—Å–æ–∫ */}
      <ul className="mt-4 grid gap-6 md:grid-cols-2">
        {view.map((t) => <TeacherCard key={t.id} t={t} onTrial={() => setTrialOpen(true)} />)}
        {view.length === 0 && <div className="text-gray-600">–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç</div>}
      </ul>

      <TrialRequestModal open={trialOpen} onClose={() => setTrialOpen(false)} />
    </main>
  );
}

function TeacherCard({ t, onTrial }: { t: TeacherProfileDTO; onTrial: () => void }) {
  const name = (() => {
    const fn = t.user?.firstName?.trim() ?? '';
    const ln = t.user?.lastName?.trim() ?? '';
    const login = t.user?.login?.trim() ?? '';
    return (fn || ln) ? `${fn} ${ln}`.trim() : (login || '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å');
  })();

  const photoUrl = toAbs(t.photo);
  const about = t.aboutShort?.trim();

  const subjects = (t.teacherSubjects || []).map(s => s.name).filter(Boolean);
  const primarySubject = subjects[0]; // –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–µ–¥–º–µ—Ç (–ø–µ—Ä–≤—ã–π)
  const minPrice = (() => {
    const vals = (t.teacherSubjects || []).map(s => (typeof s.price === 'number' ? s.price! : Infinity));
    const v = Math.min(...(vals.length ? vals : [Infinity]));
    return Number.isFinite(v) ? v : null;
  })();

  return (
    <li className="rounded-xl border bg-white p-4">
      <div className="flex gap-4 items-start">
        <div className="h-14 w-14 rounded-full bg-gray-100 overflow-hidden">
          {photoUrl
            ? <img src={photoUrl} alt={name} className="h-full w-full object-cover" width={56} height={56} loading="lazy" decoding="async" />
            : <div className="grid h-full w-full place-items-center text-xl">üßë‚Äçüè´</div>}
        </div>

        <div className="flex-1">
          <div className="font-semibold" style={{ color: 'var(--colour-text)' }}>{name}</div>

          {/* —Å—Ç—Ä–æ–∫–∞ —Å –ø—Ä–µ–¥–º–µ—Ç–æ–º */}
          {primarySubject && (
            <div className="text-sm mt-1" style={{ color: 'var(--colour-text)' }}>
              –£—á–∏—Ç–µ–ª—å {primarySubject}
            </div>
          )}

          {/* –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å) */}
          {about && <div className="text-sm mt-1 line-clamp-2" style={{ color: 'var(--colour-text)' }}>{about}</div>}

          <div className="mt-3 flex gap-2 items-center">
            <a
              href={`/teacher/${t.id}`}
              className="px-3 py-1.5 rounded text-sm hover:opacity-90"
              style={{ backgroundColor: 'var(--colour-secondary)' }}
            >
              {/* —Ç–µ–∫—Å—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –±–µ–ª—ã–º –≤–Ω—É—Ç—Ä–∏, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–±–∏–≤–∞–ª—Å—è –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏ —Å—Å—ã–ª–æ–∫ */}
              <span style={{ color: '#fff' }}>–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è</span>
            </a>

            <button
              onClick={onTrial}
              className="px-3 py-1.5 rounded border text-sm hover:opacity-90"
              style={{ borderColor: 'var(--colour-primary)', color: 'var(--colour-primary)' }}
            >
              –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —É—Ä–æ–∫
            </button>

            {minPrice !== null && (
              <div className="ml-auto text-sm" style={{ color: 'var(--colour-text)' }}>
                –æ—Ç {minPrice} ‚ÇΩ
              </div>
            )}
          </div>
        </div>
      </div>
    </li>
  );
}
